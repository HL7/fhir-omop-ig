/// url = 'http://hl7.org/fhir/uv/omop/StructureMap/ObservationMap'
/// name = 'ObservationMap'
/// title = 'Mapping Observation resource to  Observation OMOP Domain'
/// status = 'draft'

uses "http://hl7.org/fhir/StructureDefinition/Observation" alias Observation as source
uses "http://hl7.org/fhir/uv/omop/StructureDefinition/Observation" alias ObsTable as target

 group Observe(source src : Observation, target tgt : ObsTable) 
 {
    src where ('social-history' | 'imaging' | 'survey' | 'exam' | 'therapy' | 'activity' | 'procedure' ).supersetOf(Observation.category.coding.code)  then {
    src.id as id -> tgt.observation_id = cast(id, "integer");
    src.code as s -> tgt then {
        s.coding as sc -> tgt then {
                sc.code as a -> tgt.observation_concept_id = a;
            };
        };
        src.subject as s -> tgt then {
		s.identifier as sid -> tgt then {
			sid.value as a-> tgt.person_id = a;
		};
	};
        src.encounter as s -> tgt then {
		    s.identifier as sid -> tgt then {
		    	sid.value as b -> tgt.visit_occurrence_id = b;
		};
	};
        src.effective : dateTime as a -> tgt.observation_datetime = a , tgt.observation_date = cast(a, "date");
        src.effective : instant as einst -> tgt.observation_datetime = cast(einst, "dateTime"), tgt.observation_date = cast(einst, "date");
        src.effective : Period as s -> tgt then {
            s.start as ss -> tgt.observation_datetime = cast(ss, "dateTime"), tgt.observation_date = cast(ss, "date");
        };
    src.issued  as s  where (s.toDate != src.effectiveDate) -> tgt.observation_source_value = cast(s, "string");    
    src.performer as s -> tgt then {
		s.identifier as sid -> tgt then {
			sid.value as b -> tgt.provider_id = b;
		};
	};
    src.value : Quantity as s -> tgt then {
        s.value as a  -> tgt.value_as_number = a;
        s.unit as b -> tgt.unit_concept_id = b;
    };
    src.value : CodeableConcept as s  -> tgt then {
            s.coding as sc -> tgt then {
                sc.code as a -> tgt.value_as_concept_id = a;
            };
        };
    src.value : string as b -> tgt.value_as_string = b;
    src.note as d -> tgt.observation_source_value = d; 
    } "OnlyObs";
};
